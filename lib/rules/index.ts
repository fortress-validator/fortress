import type { Rule, Rules } from '@fortress-validator/types';
import acceptedRule from './accepted';
import alphaRule from './alpha';
import alphaDashRule from './alphaDash';
import alphaDashDotRule from './alphaDashDot';
import alphaNumRule from './alphaNum';
import arrayRule from './array';
import asciiRule from './ascii';
import betweenRule from './between';
import betweenLengthRule from './betweenLength';
import booleanRule from './boolean';
import containsAllRule from './containsAll';
import containsAnyRule from './containsAny';
import declinedRule from './declined';
import differentRule from './different';
import distinctRule from './distinct';
import domainRule from './domain';
import emailRule from './email';
import endsWithRule from './endsWith';
import equalsRule from './equals';
import fileRule from './file';
import fileBetweenSizeRule from './fileBetweenSize';
import fileMaxSizeRule from './fileMaxSize';
import fileMinSizeRule from './fileMinSize';
import fileSizeRule from './fileSize';
import httpRule from './http';
import httpsRule from './https';
import integerRule from './integer';
import jsonRule from './json';
import lengthRule from './length';
import lowercaseRule from './lowercase';
import maxRule from './max';
import maxLengthRule from './maxLength';
import minRule from './min';
import minLengthRule from './minLength';
import notContainsAll from './notContainsAll';
import notContainsAny from './notContainsAny';
import notEquals from './notEquals';
import notOneOfRule from './notOneOf';
import numberRule from './number';
import numericRule from './numeric';
import oneOfRule from './oneOf';
import regexRule from './regex';
import requiredRule from './required';
import sameRule from './same';
import size from './size';
import startsWithRule from './startsWith';
import stringRule from './string';
import stringBetweenLengthRule from './stringBetweenLength';
import stringLengthRule from './stringLength';
import stringMaxLengthRule from './stringMaxLength';
import stringMinLengthRule from './stringMinLength';
import stringNotContainsAll from './stringNotContainsAll';
import stringNotContainsAny from './stringNotContainsAny';
import uniqueRule from './unique';
import uppercaseRule from './uppercase';
import urlRule from './url';

const rules: Rules = {
  accepted: acceptedRule as Rule<unknown>,
  alpha: alphaRule as Rule<unknown>,
  alphaDash: alphaDashRule as Rule<unknown>,
  alphaDashDot: alphaDashDotRule as Rule<unknown>,
  alphaNum: alphaNumRule as Rule<unknown>,
  array: arrayRule as Rule<unknown>,
  ascii: asciiRule as Rule<unknown>,
  between: betweenRule as Rule<unknown>,
  betweenLength: betweenLengthRule as Rule<unknown>,
  boolean: booleanRule as Rule<unknown>,
  containsAll: containsAllRule as Rule<unknown>,
  containsAny: containsAnyRule as Rule<unknown>,
  declined: declinedRule as Rule<unknown>,
  different: differentRule as Rule<unknown>,
  distinct: distinctRule as Rule<unknown>,
  domain: domainRule as Rule<unknown>,
  email: emailRule as Rule<unknown>,
  endsWith: endsWithRule as Rule<unknown>,
  equals: equalsRule as Rule<unknown>,
  file: fileRule as Rule<unknown>,
  fileBetweenSize: fileBetweenSizeRule as Rule<unknown>,
  fileMaxSize: fileMaxSizeRule as Rule<unknown>,
  fileMinSize: fileMinSizeRule as Rule<unknown>,
  fileSize: fileSizeRule as Rule<unknown>,
  http: httpRule as Rule<unknown>,
  https: httpsRule as Rule<unknown>,
  integer: integerRule as Rule<unknown>,
  json: jsonRule as Rule<unknown>,
  length: lengthRule as Rule<unknown>,
  lowercase: lowercaseRule as Rule<unknown>,
  max: maxRule as Rule<unknown>,
  maxLength: maxLengthRule as Rule<unknown>,
  min: minRule as Rule<unknown>,
  minLength: minLengthRule as Rule<unknown>,
  notContainsAll: notContainsAll as Rule<unknown>,
  notContainsAny: notContainsAny as Rule<unknown>,
  notEquals: notEquals as Rule<unknown>,
  notOneOf: notOneOfRule as Rule<unknown>,
  number: numberRule as Rule<unknown>,
  numeric: numericRule as Rule<unknown>,
  oneOf: oneOfRule as Rule<unknown>,
  regex: regexRule as Rule<unknown>,
  required: requiredRule as Rule<unknown>,
  same: sameRule as Rule<unknown>,
  size: size as Rule<unknown>,
  startsWith: startsWithRule as Rule<unknown>,
  string: stringRule as Rule<unknown>,
  stringBetweenLength: stringBetweenLengthRule as Rule<unknown>,
  stringContainsAll: containsAllRule as Rule<unknown>,
  stringContainsAny: containsAnyRule as Rule<unknown>,
  stringLength: stringLengthRule as Rule<unknown>,
  stringMaxLength: stringMaxLengthRule as Rule<unknown>,
  stringMinLength: stringMinLengthRule as Rule<unknown>,
  stringNotContainsAll: stringNotContainsAll as Rule<unknown>,
  stringNotContainsAny: stringNotContainsAny as Rule<unknown>,
  unique: uniqueRule as Rule<unknown>,
  uppercase: uppercaseRule as Rule<unknown>,
  url: urlRule as Rule<unknown>,
};

export default rules;
